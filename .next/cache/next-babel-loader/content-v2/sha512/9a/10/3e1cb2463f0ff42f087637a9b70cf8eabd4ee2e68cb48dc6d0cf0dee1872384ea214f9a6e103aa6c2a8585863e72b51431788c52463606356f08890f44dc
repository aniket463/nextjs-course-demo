{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aniket\\\\Desktop\\\\REACT\\\\Nextjs_project\\\\nextjs-course\\\\pages\\\\index.jsx\";\n// import { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\n//Pre-rendering\n//1.static site generation\n//2.server side generation\nfunction HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //   //send http request and fetch the data\n  //   setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []); \n  // return <MeetupList meetups={loadedMeetups} />;\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n} //Static site generation -> here we have to run build to generate static page that will render, but the problem is when we add\n//new data that will not show(Disadvantage), we need to add {revalidate: sec} this will update the static page in given sec.\n\n\n_c = HomePage;\n//Server side generation -> here generate the page upon each request. Use it when if you want ot access on req and \n//response or data change frequently.\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   //fetch api data;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     },\n//   };\n// };\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/aniket/Desktop/REACT/Nextjs_project/nextjs-course/pages/index.jsx"],"names":["MeetupList","HomePage","props","meetups"],"mappings":";;AAAA;AACA,OAAOA,UAAP,MAAuB,kCAAvB;;AA0BA;AACA;AACA;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AAEA;AACA;AACA;AACA;AACA;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;;;KAbSF,Q;AAwBT;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeA,QAAf","sourcesContent":["// import { useEffect, useState } from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"A first meetup\",\r\n    image: \"https://picsum.photos/seed/picsum/200/300\",\r\n    address: \"Some address, kolkata\",\r\n    description: \"This is first meetups\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"A second meetup\",\r\n    image: \"https://picsum.photos/id/870/200/300?grayscale&blur=2\",\r\n    address: \"Some address, kolkata\",\r\n    description: \"This is second meetups\",\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    title: \"A third meetup\",\r\n    image: \"https://picsum.photos/200/300/?blur\",\r\n    address: \"Some address, Goa\",\r\n    description: \"This is third meetups\",\r\n  },\r\n];\r\n\r\n//Pre-rendering\r\n//1.static site generation\r\n//2.server side generation\r\n\r\n\r\nfunction HomePage(props) {\r\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   //send http request and fetch the data\r\n  //   setLoadedMeetups(DUMMY_MEETUPS);\r\n  // }, []); \r\n  // return <MeetupList meetups={loadedMeetups} />;\r\n\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n//Static site generation -> here we have to run build to generate static page that will render, but the problem is when we add\r\n//new data that will not show(Disadvantage), we need to add {revalidate: sec} this will update the static page in given sec.\r\nexport async function getStaticProps() {\r\n  //fetch data from api\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS\r\n    },\r\n    revalidate: 10\r\n  };\r\n}\r\n\r\n//Server side generation -> here generate the page upon each request. Use it when if you want ot access on req and \r\n//response or data change frequently.\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n \r\n\r\n//   //fetch api data;\r\n\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     },\r\n//   };\r\n// };\r\n\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}