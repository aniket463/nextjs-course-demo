{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aniket\\\\Desktop\\\\REACT\\\\Nextjs_project\\\\nextjs-course\\\\pages\\\\[meetupId]\\\\index.jsx\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://picsum.photos/seed/picsum/200/300\",\n      title: \"A first meetup\",\n      address: \"Some address, kolkata\",\n      description: \"This is first meetups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/aniket/Desktop/REACT/Nextjs_project/nextjs-course/pages/[meetupId]/index.jsx"],"names":["Fragment","MeetupDetail","MeetupDetails"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,GAAyB;AACvB,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAC,2CADR;AAEE,MAAA,KAAK,EAAC,gBAFR;AAGE,MAAA,OAAO,EAAC,uBAHV;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAXQA,a;;AA+ET,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nfunction MeetupDetails() {\r\n  return (\r\n    <Fragment>\r\n      <MeetupDetail\r\n        image=\"https://picsum.photos/seed/picsum/200/300\"\r\n        title=\"A first meetup\"\r\n        address=\"Some address, kolkata\"\r\n        description=\"This is first meetups\"\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mongo:Q5iWOMVURlIRMQ1t@cluster0.rog0svz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  return {\r\n    // false -> (All supported path are define) only find these configure path, If not match then return 404 page\r\n    //true => if not match then dynamically geenerate page for coming request\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n\r\n    //Hard Coded\r\n    //paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m2\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupId: \"m3\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  //Fetch data for single meetup\r\n  const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://mongo:Q5iWOMVURlIRMQ1t@cluster0.rog0svz.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  \r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupId,\r\n        image: \"https://picsum.photos/seed/picsum/200/300\",\r\n        title: \"A first meetup\",\r\n        address: \"Some address, kolkata\",\r\n        description: \"This is first meetups\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}